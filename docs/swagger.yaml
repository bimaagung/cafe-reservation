basePath: /api/
definitions:
  domain.MenuRes:
    properties:
      created_at:
        example: 10/10/2022 11:13:00
        type: string
      id:
        example: random
        type: string
      name:
        example: Cappucino
        type: string
      price:
        example: 15000
        type: integer
      stock:
        example: 10
        type: integer
      updated_at:
        example: 10/10/2022 11:13:00
        type: string
      url:
        example: http://127.0.0.1:9000/menu/64068897-1182718.png
        type: string
    required:
    - name
    - price
    - stock
    - url
    type: object
  domain.UserReq:
    properties:
      name:
        type: string
      password:
        type: string
      retype_password:
        type: string
      username:
        type: string
    type: object
  domain.UserRes:
    properties:
      id:
        type: string
      name:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  response.SuccessRes:
    properties:
      data: {}
      message:
        example: success
        type: string
      status:
        example: ok
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a cafe reservation server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cafe Reservation API
  version: "1.0"
paths:
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: register a new user
      parameters:
      - description: the input account user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/domain.UserRes'
              type: object
      tags:
      - Auth
  /api/menu:
    get:
      consumes:
      - application/json
      description: get list menu
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.MenuRes'
                  type: array
              type: object
      tags:
      - Menu
    post:
      consumes:
      - application/json
      description: add menu
      parameters:
      - description: name menu
        example: Cappucino
        in: formData
        name: name
        required: true
        type: string
      - description: price menu
        example: 15000
        in: formData
        name: price
        required: true
        type: integer
      - description: count stock menu
        example: 10
        in: formData
        name: stock
        required: true
        type: integer
      - description: Upload cover image menu
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/domain.MenuRes'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Menu
  /api/menu/{id}:
    delete:
      consumes:
      - application/json
      description: delete menu
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                message:
                  type: string
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Menu
    get:
      consumes:
      - application/json
      description: get menu by id
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/domain.MenuRes'
              type: object
      tags:
      - Menu
    put:
      consumes:
      - application/json
      description: update menu
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: name menu
        example: Cappucino
        in: formData
        name: name
        required: true
        type: string
      - description: price menu
        example: 15000
        in: formData
        name: price
        required: true
        type: integer
      - description: count stock menu
        example: 10
        in: formData
        name: stock
        required: true
        type: integer
      - description: Upload cover image menu
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/domain.MenuRes'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Menu
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
